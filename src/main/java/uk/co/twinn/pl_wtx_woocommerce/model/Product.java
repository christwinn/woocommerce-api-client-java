/*
 * Copyright (c) 2025.
 *
 * Crud+ ActionBuilder
 * Author: Chris Twinn
 * Licence: MIT Licence see LICENCE file
 * All Rights Reserved
 */

/*
 * WooCommerce REST API
 * The REST API is a powerful part of WooCommerce which lets you read and write various parts of WooCommerce data such as orders, products, coupons, customers, and shipping zones.
 *
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package uk.co.twinn.pl_wtx_woocommerce.model;

import java.math.BigDecimal;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

//import com.google.gson.annotations.SerializedName;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Nullable;
import uk.co.twinn.api.woocommerce.core.JacksonObjectMapper;
import uk.co.twinn.api.woocommerce.response.core.ErrorMessage;

/**
 * Product
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class Product {
  public static final String SERIALIZED_NAME_ID = "id";
  //@SerializedName(SERIALIZED_NAME_ID)
  @Nullable
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  //@SerializedName(SERIALIZED_NAME_NAME)
  @Nullable
  private String name;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  //@SerializedName(SERIALIZED_NAME_SLUG)
  @Nullable
  private String slug;

  public static final String SERIALIZED_NAME_PERMALINK = "permalink";
  //@SerializedName(SERIALIZED_NAME_PERMALINK)
  @Nullable
  private String permalink;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  //@SerializedName(SERIALIZED_NAME_DATE_CREATED)
  @Nullable
  private LocalDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_CREATED_GMT = "date_created_gmt";
  //@SerializedName(SERIALIZED_NAME_DATE_CREATED_GMT)
  @Nullable
  private LocalDateTime dateCreatedGmt;

  public static final String SERIALIZED_NAME_DATE_MODIFIED = "date_modified";
  //@SerializedName(SERIALIZED_NAME_DATE_MODIFIED)
  @Nullable
  private LocalDateTime dateModified;

  public static final String SERIALIZED_NAME_DATE_MODIFIED_GMT = "date_modified_gmt";
  //@SerializedName(SERIALIZED_NAME_DATE_MODIFIED_GMT)
  @Nullable
  private LocalDateTime dateModifiedGmt;

  public static final String SERIALIZED_NAME_TYPE = "type";
  //@SerializedName(SERIALIZED_NAME_TYPE)
  @Nullable
  private String type;

  public static final String SERIALIZED_NAME_STATUS = "status";
  //@SerializedName(SERIALIZED_NAME_STATUS)
  @Nullable
  private String status;

  public static final String SERIALIZED_NAME_FEATURED = "featured";
  //@SerializedName(SERIALIZED_NAME_FEATURED)
  @Nullable
  private Boolean featured;

  public static final String SERIALIZED_NAME_CATALOG_VISIBILITY = "catalog_visibility";
  //@SerializedName(SERIALIZED_NAME_CATALOG_VISIBILITY)
  @Nullable
  private String catalogVisibility;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  //@SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @Nullable
  private String description;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  //@SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  @Nullable
  private String shortDescription;

  public static final String SERIALIZED_NAME_SKU = "sku";
  //@SerializedName(SERIALIZED_NAME_SKU)
  @Nullable
  private String sku;

  public static final String SERIALIZED_NAME_PRICE = "price";
  //@SerializedName(SERIALIZED_NAME_PRICE)
  @Nullable
  private String price;

  public static final String SERIALIZED_NAME_REGULAR_PRICE = "regular_price";
  //@SerializedName(SERIALIZED_NAME_REGULAR_PRICE)
  @Nullable
  private String regularPrice;

  public static final String SERIALIZED_NAME_SALE_PRICE = "sale_price";
  //@SerializedName(SERIALIZED_NAME_SALE_PRICE)
  @Nullable
  private String salePrice;

  public static final String SERIALIZED_NAME_DATE_ON_SALE_FROM = "date_on_sale_from";
  //@SerializedName(SERIALIZED_NAME_DATE_ON_SALE_FROM)
  @Nullable
  private LocalDateTime dateOnSaleFrom;

  public static final String SERIALIZED_NAME_DATE_ON_SALE_FROM_GMT = "date_on_sale_from_gmt";
  //@SerializedName(SERIALIZED_NAME_DATE_ON_SALE_FROM_GMT)
  @Nullable
  private LocalDateTime dateOnSaleFromGmt;

  public static final String SERIALIZED_NAME_DATE_ON_SALE_TO = "date_on_sale_to";
  //@SerializedName(SERIALIZED_NAME_DATE_ON_SALE_TO)
  @Nullable
  private LocalDateTime dateOnSaleTo;

  public static final String SERIALIZED_NAME_DATE_ON_SALE_TO_GMT = "date_on_sale_to_gmt";
  //@SerializedName(SERIALIZED_NAME_DATE_ON_SALE_TO_GMT)
  @Nullable
  private LocalDateTime dateOnSaleToGmt;

  public static final String SERIALIZED_NAME_PRICE_HTML = "price_html";
  //@SerializedName(SERIALIZED_NAME_PRICE_HTML)
  @Nullable
  private String priceHtml;

  public static final String SERIALIZED_NAME_ON_SALE = "on_sale";
  //@SerializedName(SERIALIZED_NAME_ON_SALE)
  @Nullable
  private Boolean onSale;

  public static final String SERIALIZED_NAME_PURCHASABLE = "purchasable";
  //@SerializedName(SERIALIZED_NAME_PURCHASABLE)
  @Nullable
  private Boolean purchasable;

  public static final String SERIALIZED_NAME_TOTAL_SALES = "total_sales";
  //@SerializedName(SERIALIZED_NAME_TOTAL_SALES)
  @Nullable
  private Long totalSales;

  public static final String SERIALIZED_NAME_VIRTUAL = "virtual";
  //@SerializedName(SERIALIZED_NAME_VIRTUAL)
  @Nullable
  private Boolean virtual;

  public static final String SERIALIZED_NAME_DOWNLOADABLE = "downloadable";
  //@SerializedName(SERIALIZED_NAME_DOWNLOADABLE)
  @Nullable
  private Boolean downloadable;

  public static final String SERIALIZED_NAME_DOWNLOADS = "downloads";
  //@SerializedName(SERIALIZED_NAME_DOWNLOADS)
  @Nullable
  private List<ProductDownload> downloads = new ArrayList<>();

  public static final String SERIALIZED_NAME_DOWNLOAD_LIMIT = "download_limit";
  //@SerializedName(SERIALIZED_NAME_DOWNLOAD_LIMIT)
  @Nullable
  private Integer downloadLimit;

  public static final String SERIALIZED_NAME_DOWNLOAD_EXPIRY = "download_expiry";
  //@SerializedName(SERIALIZED_NAME_DOWNLOAD_EXPIRY)
  @Nullable
  private Integer downloadExpiry;

  public static final String SERIALIZED_NAME_EXTERNAL_URL = "external_url";
  //@SerializedName(SERIALIZED_NAME_EXTERNAL_URL)
  @Nullable
  private String externalUrl;

  public static final String SERIALIZED_NAME_BUTTON_TEXT = "button_text";
  //@SerializedName(SERIALIZED_NAME_BUTTON_TEXT)
  @Nullable
  private String buttonText;

  public static final String SERIALIZED_NAME_TAX_STATUS = "tax_status";
  //@SerializedName(SERIALIZED_NAME_TAX_STATUS)
  @Nullable
  private String taxStatus;

  public static final String SERIALIZED_NAME_TAX_CLASS = "tax_class";
  //@SerializedName(SERIALIZED_NAME_TAX_CLASS)
  @Nullable
  private String taxClass;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manage_stock";
  //@SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  @Nullable
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_STOCK_QUANTITY = "stock_quantity";
  //@SerializedName(SERIALIZED_NAME_STOCK_QUANTITY)
  @Nullable
  private Integer stockQuantity;

  public static final String SERIALIZED_NAME_STOCK_STATUS = "stock_status";
  //@SerializedName(SERIALIZED_NAME_STOCK_STATUS)
  @Nullable
  private String stockStatus;

  public static final String SERIALIZED_NAME_BACKORDERS = "backorders";
  //@SerializedName(SERIALIZED_NAME_BACKORDERS)
  @Nullable
  private String backorders;

  public static final String SERIALIZED_NAME_BACKORDERS_ALLOWED = "backorders_allowed";
  //@SerializedName(SERIALIZED_NAME_BACKORDERS_ALLOWED)
  @Nullable
  private Boolean backordersAllowed;

  public static final String SERIALIZED_NAME_BACKORDERED = "backordered";
  //@SerializedName(SERIALIZED_NAME_BACKORDERED)
  @Nullable
  private Boolean backordered;

    public static final String SERIALIZED_NAME_LOW_STOCK_AMOUNT = "low_stock_amount";
    //@SerializedName(SERIALIZED_NAME_LOW_STOCK_AMOUNT)
    @Nullable
    private Integer lowStockAmount;

    public static final String SERIALIZED_NAME_BRANDS = "brands";
    //@SerializedName(SERIALIZED_NAME_BRANDS)
    @Nullable
    private List<Brand> brands;

    public static final String SERIALIZED_NAME_HAS_OPTIONS = "has_options";
    //@SerializedName(SERIALIZED_NAME_HAS_OPTIONS)
    @Nullable
    private Boolean hasOptions;

    public static final String SERIALIZED_NAME_POST_PASSWORD = "post_password";
    //@SerializedName(SERIALIZED_NAME_POST_PASSWORD)
    @Nullable
    private String postPassword;

    /**
     * I only want to see if the meta comes out... jackson deals with what is there!
     * issue could be users adding in extensions and we are going to collapse.
     * do I have extensions installed that are causing me issues.
     * Sure I only downloaded the standard WordPress + WooCommerce
     */

    public static final String SERIALIZED_NAME_GLOBAL_UNIQUE_ID = "global_unique_id";
    //@SerializedName(SERIALIZED_NAME_GLOBAL_UNIQUE_ID)
    @Nullable
    private String globalUniqueId;

    public static final String SERIALIZED_NAME_PERMALINK_TEMPLATE = "permalink_template";
    //@SerializedName(SERIALIZED_NAME_PERMALINK_TEMPLATE)
    @Nullable
    private String permalinkTemplate;

    public static final String SERIALIZED_NAME_GENERATED_SLUG = "generated_slug";
    //@SerializedName(SERIALIZED_NAME_GENERATED_SLUG)
    @Nullable
    private String generatedSlug;

    public static final String SERIALIZED_NAME_JETPACK_SHARING_ENABLED = "jetpack_sharing_enabled";
    //@SerializedName(SERIALIZED_NAME_JETPACK_SHARING_ENABLED)
    @Nullable
    private Boolean jetpackSharingEnabled;

    public static final String SERIALIZED_NAME_LINKS = "_links";
    //@SerializedName(SERIALIZED_NAME_LINKS)
    @Nullable
    private Links links;

  public static final String SERIALIZED_NAME_SOLD_INDIVIDUALLY = "sold_individually";
  //@SerializedName(SERIALIZED_NAME_SOLD_INDIVIDUALLY)
  @Nullable
  private Boolean soldIndividually;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  //@SerializedName(SERIALIZED_NAME_WEIGHT)
  @Nullable
  private String weight;

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  //@SerializedName(SERIALIZED_NAME_DIMENSIONS)
  @Nullable
  private ProductDimension dimensions;

  public static final String SERIALIZED_NAME_SHIPPING_REQUIRED = "shipping_required";
  //@SerializedName(SERIALIZED_NAME_SHIPPING_REQUIRED)
  @Nullable
  private Boolean shippingRequired;

  public static final String SERIALIZED_NAME_SHIPPING_TAXABLE = "shipping_taxable";
  //@SerializedName(SERIALIZED_NAME_SHIPPING_TAXABLE)
  @Nullable
  private Boolean shippingTaxable;

  public static final String SERIALIZED_NAME_SHIPPING_CLASS = "shipping_class";
  //@SerializedName(SERIALIZED_NAME_SHIPPING_CLASS)
  @Nullable
  private String shippingClass;

  public static final String SERIALIZED_NAME_SHIPPING_CLASS_ID = "shipping_class_id";
  //@SerializedName(SERIALIZED_NAME_SHIPPING_CLASS_ID)
  @Nullable
  private Integer shippingClassId;

  public static final String SERIALIZED_NAME_REVIEWS_ALLOWED = "reviews_allowed";
  //@SerializedName(SERIALIZED_NAME_REVIEWS_ALLOWED)
  @Nullable
  private Boolean reviewsAllowed;

  public static final String SERIALIZED_NAME_AVERAGE_RATING = "average_rating";
  //@SerializedName(SERIALIZED_NAME_AVERAGE_RATING)
  @Nullable
  private String averageRating;

  public static final String SERIALIZED_NAME_RATING_COUNT = "rating_count";
  //@SerializedName(SERIALIZED_NAME_RATING_COUNT)
  @Nullable
  private Integer ratingCount;

  public static final String SERIALIZED_NAME_RELATED_IDS = "related_ids";
  //@SerializedName(SERIALIZED_NAME_RELATED_IDS)
  @Nullable
  private List<Integer> relatedIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPSELL_IDS = "upsell_ids";
  //@SerializedName(SERIALIZED_NAME_UPSELL_IDS)
  @Nullable
  private List<Integer> upsellIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_CROSS_SELL_IDS = "cross_sell_ids";
  //@SerializedName(SERIALIZED_NAME_CROSS_SELL_IDS)
  @Nullable
  private List<Integer> crossSellIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  //@SerializedName(SERIALIZED_NAME_PARENT_ID)
  @Nullable
  private Integer parentId;

  public static final String SERIALIZED_NAME_PURCHASE_NOTE = "purchase_note";
  //@SerializedName(SERIALIZED_NAME_PURCHASE_NOTE)
  @Nullable
  private String purchaseNote;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  //@SerializedName(SERIALIZED_NAME_CATEGORIES)
  @Nullable
  private List<ProductCategoriesItem> categories = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  //@SerializedName(SERIALIZED_NAME_TAGS)
  @Nullable
  private List<ProductTag> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_IMAGES = "images";
  //@SerializedName(SERIALIZED_NAME_IMAGES)
  @Nullable
  private List<ProductImage> images = new ArrayList<>();

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  //@SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  @Nullable
  private List<ProductAttribute> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_ATTRIBUTES = "default_attributes";
  //@SerializedName(SERIALIZED_NAME_DEFAULT_ATTRIBUTES)
  @Nullable
  private List<ProductAttribute> defaultAttributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_VARIATIONS = "variations";
  //@SerializedName(SERIALIZED_NAME_VARIATIONS)
  @Nullable
  private List<Integer> variations = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUPED_PRODUCTS = "grouped_products";
  //@SerializedName(SERIALIZED_NAME_GROUPED_PRODUCTS)
  @Nullable
  private List<Integer> groupedProducts = new ArrayList<>();

  public static final String SERIALIZED_NAME_MENU_ORDER = "menu_order";
  //@SerializedName(SERIALIZED_NAME_MENU_ORDER)
  @Nullable
  private Integer menuOrder;

  public static final String SERIALIZED_NAME_META_DATA = "meta_data";
  //@SerializedName(SERIALIZED_NAME_META_DATA)
  @Nullable
  private List<MetaData> metaData = new ArrayList<>();

  public enum TypeEnum {
    DEFAULT("simple"),

    GROUPED("grouped"),

    EXTERNAL("external"),

    VARIABLE("variable");

    private final String value;

    TypeEnum(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
        for (TypeEnum b : TypeEnum.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }
public enum StatusEnum {
    DRAFT("draft"),
    PENDING("pending"),
    PRIVATE("private"),
    PUBLISH("publish"),
    DEFAULT("publish");

    private final String value;

    StatusEnum(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
        for (StatusEnum b : StatusEnum.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
}

public enum CatalogVisiblityEnum {
    VISIBLE("visible"),

    CATALOG("catalog"),

    SEARCH("search"),

    HIDDEN("hidden");

    private final String value;

    CatalogVisiblityEnum(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static CatalogVisiblityEnum fromValue(String value) {
        for (CatalogVisiblityEnum b : CatalogVisiblityEnum.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
}

public enum TaxStatusEnum {
    TAXABLE("taxable"),

    SHIPPING("shipping"),

    NONE("none");

    private final String value;

    TaxStatusEnum(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static TaxStatusEnum fromValue(String value) {
        for (TaxStatusEnum b : TaxStatusEnum.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
}
    public enum StockStatusEnum {
        IN_STOCK("instock"),

        OUT_OF_STOCK("outofstock"),

        ON_BACK_ORDER("onbackorder");

        private final String value;
        StockStatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StockStatusEnum fromValue(String value) {
            for (StockStatusEnum b : StockStatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }
  private ErrorMessage error; //batch notifier

  public Product() {
  }

  public Product id(@Nullable Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier for the resource. read-only
   * @return id
   */
  @Nullable
  public Integer getId() {
    return id;
  }

  public void setId(@Nullable Integer id) {
    this.id = id;
  }


  public Product name(@Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Product name.
   * @return name
   */
  @Nullable
  public String getName() {
    return name;
  }

  public void setName(@Nullable String name) {
    this.name = name;
  }


  public Product slug(@Nullable String slug) {
    this.slug = slug;
    return this;
  }

  /**
   * Product slug.
   * @return slug
   */
  @Nullable
  public String getSlug() {
    return slug;
  }

  public void setSlug(@Nullable String slug) {
    this.slug = slug;
  }


  public Product permalink(@Nullable String permalink) {
    this.permalink = permalink;
    return this;
  }

  /**
   * Product URL. read-only
   * @return permalink
   */
  @Nullable
  public String getPermalink() {
    return permalink;
  }

  public void setPermalink(@Nullable String permalink) {
    this.permalink = permalink;
  }


  public Product dateCreated(@Nullable LocalDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date the product was created, in the site&#39;s timezone. read-only
   * @return dateCreated
   */
  @Nullable
  public LocalDateTime getDateCreated() {
    return dateCreated;
  }

  @JsonProperty("date_created")
  public void setDateCreated(@Nullable LocalDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public Product dateCreatedGmt(@Nullable LocalDateTime dateCreatedGmt) {
    this.dateCreatedGmt = dateCreatedGmt;
    return this;
  }

  /**
   * The date the product was created, as GMT. read-only
   * @return dateCreatedGmt
   */
  @Nullable
  public LocalDateTime getDateCreatedGmt() {
    return dateCreatedGmt;
  }

  @JsonProperty("date_created_gmt")
  public void setDateCreatedGmt(@Nullable LocalDateTime dateCreatedGmt) {
    this.dateCreatedGmt = dateCreatedGmt;
  }


  public Product dateModified(@Nullable LocalDateTime dateModified) {
    this.dateModified = dateModified;
    return this;
  }

  /**
   * The date the product was last modified, in the site&#39;s timezone. read-only
   * @return dateModified
   */
  @Nullable
  public LocalDateTime getDateModified() {
    return dateModified;
  }

  @JsonProperty("date_modified")
  public void setDateModified(@Nullable LocalDateTime dateModified) {
    this.dateModified = dateModified;
  }


  public Product dateModifiedGmt(@Nullable LocalDateTime dateModifiedGmt) {
    this.dateModifiedGmt = dateModifiedGmt;
    return this;
  }

  /**
   * The date the product was last modified, as GMT. read-only
   * @return dateModifiedGmt
   */
  @Nullable
  public LocalDateTime getDateModifiedGmt() {
    return dateModifiedGmt;
  }

  @JsonProperty("date_modified_gmt")
  public void setDateModifiedGmt(@Nullable LocalDateTime dateModifiedGmt) {
    this.dateModifiedGmt = dateModifiedGmt;
  }


  public Product type(@Nullable String type) {
    this.type = type;
    return this;
  }

  /**
   * Product type. Options: simple, grouped, external and variable. Default is simple.
   * @return type
   */
  @Nullable
  public String getType() {
    return type;
  }

  public void setType(@Nullable String type) {
    this.type = type;
  }

  public void setType(TypeEnum type) {
        this.type = type.getValue();
    }


  public Product status(@Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Product status (post status). Options: draft, pending, private and publish. Default is publish.
   * @return status
   */
  @Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@Nullable String status) {
    this.status = status;
  }

  public void setStatus(TypeEnum status) {
        this.status = status.getValue();
    }


  public Product featured(@Nullable Boolean featured) {
    this.featured = featured;
    return this;
  }

  /**
   * Featured product. Default is false.
   * @return featured
   */
  @Nullable
  public Boolean getFeatured() {
    return featured;
  }

  public void setFeatured(@Nullable Boolean featured) {
    this.featured = featured;
  }


  public Product catalogVisibility(@Nullable String catalogVisibility) {
    this.catalogVisibility = catalogVisibility;
    return this;
  }

  /**
   * Catalog visibility. Options: visible, catalog, search and hidden. Default is visible.
   * @return catalogVisibility
   */
  @Nullable
  public String getCatalogVisibility() {
    return catalogVisibility;
  }

  @JsonProperty("catalog_visibility")
  public void setCatalogVisibility(@Nullable String catalogVisibility) {
    this.catalogVisibility = catalogVisibility;
  }

    public void setCatalogVisibility(CatalogVisiblityEnum catalogVisibility) {
        this.catalogVisibility = catalogVisibility.getValue();
    }


  public Product description(@Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Product description.
   * @return description
   */
  @Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@Nullable String description) {
    this.description = description;
  }


  public Product shortDescription(@Nullable String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Product short description.
   * @return shortDescription
   */
  @Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  @JsonProperty("short_description")
  public void setShortDescription(@Nullable String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public Product sku(@Nullable String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Unique identifier.
   * @return sku
   */
  @Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(@Nullable String sku) {
    this.sku = sku;
  }


  public Product price(@Nullable String price) {
    this.price = price;
    return this;
  }

  /**
   * Current product price. read-only
   * @return price
   */
  @Nullable
  public String getPrice() {
    return price;
  }

  public void setPrice(@Nullable String price) {
    this.price = price;
  }


  public Product regularPrice(@Nullable String regularPrice) {
    this.regularPrice = regularPrice;
    return this;
  }

  /**
   * Regular product price.
   * @return regularPrice
   */
  @Nullable
  public String getRegularPrice() {
    return regularPrice;
  }

  @JsonProperty("regular_price")
  public void setRegularPrice(@Nullable String regularPrice) {
    this.regularPrice = regularPrice;
  }

  public void setRegularPrice(@Nullable BigDecimal regularPrice) {
      if (regularPrice != null) {
          setRegularPrice(regularPrice.toString());
      }
    }

  public Product salePrice(@Nullable String salePrice) {
    this.salePrice = salePrice;
    return this;
  }

  /**
   * Product sale price.
   * @return salePrice
   */
  @Nullable
  public String getSalePrice() {
    return salePrice;
  }

  @JsonProperty("sale_price")
  public void setSalePrice(@Nullable String salePrice) {
    this.salePrice = salePrice;
  }

    public void setSalePrice(@Nullable BigDecimal salePrice) {
        if (salePrice != null) {
            setSalePrice(salePrice.toString());
        }
    }


  public Product dateOnSaleFrom(@Nullable LocalDateTime dateOnSaleFrom) {
    this.dateOnSaleFrom = dateOnSaleFrom;
    return this;
  }

  /**
   * Start date of sale price, in the site&#39;s timezone.
   * @return dateOnSaleFrom
   */
  @Nullable
  public LocalDateTime getDateOnSaleFrom() {
    return dateOnSaleFrom;
  }

  @JsonProperty("date_on_sale_from")
  public void setDateOnSaleFrom(@Nullable LocalDateTime dateOnSaleFrom) {
    this.dateOnSaleFrom = dateOnSaleFrom;
  }


  public Product dateOnSaleFromGmt(@Nullable LocalDateTime dateOnSaleFromGmt) {
    this.dateOnSaleFromGmt = dateOnSaleFromGmt;
    return this;
  }

  /**
   * Start date of sale price, as GMT.
   * @return dateOnSaleFromGmt
   */
  @Nullable
  public LocalDateTime getDateOnSaleFromGmt() {
    return dateOnSaleFromGmt;
  }

  @JsonProperty("date_on_sale_from_gmt")
  public void setDateOnSaleFromGmt(@Nullable LocalDateTime dateOnSaleFromGmt) {
    this.dateOnSaleFromGmt = dateOnSaleFromGmt;
  }

  public Product dateOnSaleTo(@Nullable LocalDateTime dateOnSaleTo) {
    this.dateOnSaleTo = dateOnSaleTo;
    return this;
  }

  /**
   * End date of sale price, in the site&#39;s timezone.
   * @return dateOnSaleTo
   */
  @Nullable
  public LocalDateTime getDateOnSaleTo() {
    return dateOnSaleTo;
  }

  @JsonProperty("date_on_sale_to")
  public void setDateOnSaleTo(@Nullable LocalDateTime dateOnSaleTo) {
    this.dateOnSaleTo = dateOnSaleTo;
  }


  public Product dateOnSaleToGmt(@Nullable LocalDateTime dateOnSaleToGmt) {
    this.dateOnSaleToGmt = dateOnSaleToGmt;
    return this;
  }

  /**
   * End date of sale price, as GMT.
   * @return dateOnSaleToGmt
   */
  @Nullable
  public LocalDateTime getDateOnSaleToGmt() {
    return dateOnSaleToGmt;
  }

  @JsonProperty("date_on_sale_to_gmt")
  public void setDateOnSaleToGmt(@Nullable LocalDateTime dateOnSaleToGmt) {
    this.dateOnSaleToGmt = dateOnSaleToGmt;
  }


  public Product priceHtml(@Nullable String priceHtml) {
    this.priceHtml = priceHtml;
    return this;
  }

  /**
   * Price formatted in HTML. read-only
   * @return priceHtml
   */
  @Nullable
  public String getPriceHtml() {
    return priceHtml;
  }

  @JsonProperty("price_html")
  public void setPriceHtml(@Nullable String priceHtml) {
    this.priceHtml = priceHtml;
  }


  public Product onSale(@Nullable Boolean onSale) {
    this.onSale = onSale;
    return this;
  }

  /**
   * Shows if the product is on sale. read-only
   * @return onSale
   */
  @Nullable
  public Boolean getOnSale() {
    return onSale;
  }

  @JsonProperty("on_sale")
  public void setOnSale(@Nullable Boolean onSale) {
    this.onSale = onSale;
  }


  public Product purchasable(@Nullable Boolean purchasable) {
    this.purchasable = purchasable;
    return this;
  }

  /**
   * Shows if the product can be bought. read-only
   * @return purchasable
   */
  @Nullable
  public Boolean getPurchasable() {
    return purchasable;
  }

  public void setPurchasable(@Nullable Boolean purchasable) {
    this.purchasable = purchasable;
  }


  public Product totalSales(@Nullable Long totalSales) {
    this.totalSales = totalSales;
    return this;
  }

  /**
   * Amount of sales. read-only
   * @return totalSales
   */
  @Nullable
  public Long getTotalSales() {
    return totalSales;
  }

  @JsonProperty("total_sales")
  public void setTotalSales(@Nullable Long totalSales) {
    this.totalSales = totalSales;
  }


  public Product virtual(@Nullable Boolean virtual) {
    this.virtual = virtual;
    return this;
  }

  /**
   * If the product is virtual. Default is false.
   * @return virtual
   */
  @Nullable
  public Boolean getVirtual() {
    return virtual;
  }

  public void setVirtual(@Nullable Boolean virtual) {
    this.virtual = virtual;
  }


  public Product downloadable(@Nullable Boolean downloadable) {
    this.downloadable = downloadable;
    return this;
  }

  /**
   * If the product is downloadable. Default is false.
   * @return downloadable
   */
  @Nullable
  public Boolean getDownloadable() {
    return downloadable;
  }

  public void setDownloadable(@Nullable Boolean downloadable) {
    this.downloadable = downloadable;
  }


  public Product downloads(@Nullable List<ProductDownload> downloads) {
    this.downloads = downloads;
    return this;
  }

  public Product addDownloadsItem(ProductDownload downloadsItem) {
    if (this.downloads == null) {
      this.downloads = new ArrayList<>();
    }
    this.downloads.add(downloadsItem);
    return this;
  }

  /**
   * List of downloadable files.
   * @return downloads
   */
  @Nullable
  public List<ProductDownload> getDownloads() {
    return downloads;
  }

  public void setDownloads(@Nullable List<ProductDownload> downloads) {
    this.downloads = downloads;
  }


  public Product downloadLimit(@Nullable Integer downloadLimit) {
    this.downloadLimit = downloadLimit;
    return this;
  }

  /**
   * Number of times downloadable files can be downloaded after purchase. Default is -1.
   * @return downloadLimit
   */
  @Nullable
  public Integer getDownloadLimit() {
    return downloadLimit;
  }

  @JsonProperty("download_limit")
  public void setDownloadLimit(@Nullable Integer downloadLimit) {
    this.downloadLimit = downloadLimit;
  }


  public Product downloadExpiry(@Nullable Integer downloadExpiry) {
    this.downloadExpiry = downloadExpiry;
    return this;
  }

  /**
   * Number of days until access to downloadable files expires. Default is -1.
   * @return downloadExpiry
   */
  @Nullable
  public Integer getDownloadExpiry() {
    return downloadExpiry;
  }

  @JsonProperty("download_expiry")
  public void setDownloadExpiry(@Nullable Integer downloadExpiry) {
    this.downloadExpiry = downloadExpiry;
  }

  public Product externalUrl(@Nullable String externalUrl) {
    this.externalUrl = externalUrl;
    return this;
  }

  /**
   * Product external URL. Only for external products.
   * @return externalUrl
   */
  @Nullable
  public String getExternalUrl() {
    return externalUrl;
  }

  @JsonProperty("external_url")
  public void setExternalUrl(@Nullable String externalUrl) {
    this.externalUrl = externalUrl;
  }


  public Product buttonText(@Nullable String buttonText) {
    this.buttonText = buttonText;
    return this;
  }

  /**
   * Product external button text. Only for external products.
   * @return buttonText
   */
  @Nullable
  public String getButtonText() {
    return buttonText;
  }

  @JsonProperty("button_text")
  public void setButtonText(@Nullable String buttonText) {
    this.buttonText = buttonText;
  }


  public Product taxStatus(@Nullable String taxStatus) {
    this.taxStatus = taxStatus;
    return this;
  }

  /**
   * Tax status. Options: taxable, shipping and none. Default is taxable.
   * @return taxStatus
   */
  @Nullable
  public String getTaxStatus() {
    return taxStatus;
  }

  @JsonProperty("tax_status")
  public void setTaxStatus(@Nullable String taxStatus) {
    this.taxStatus = taxStatus;
  }


  public Product taxClass(@Nullable String taxClass) {
    this.taxClass = taxClass;
    return this;
  }

  /**
   * Tax class.
   * @return taxClass
   */
  @Nullable
  public String getTaxClass() {
    return taxClass;
  }

  @JsonProperty("tax_class")
  public void setTaxClass(@Nullable String taxClass) {
    this.taxClass = taxClass;
  }


  public Product manageStock(@Nullable Boolean manageStock) {
    this.manageStock = manageStock;
    return this;
  }

  /**
   * Stock management at product level. Default is false.
   * @return manageStock
   */
  @Nullable
  public Boolean getManageStock() {
    return manageStock;
  }

  @JsonProperty("manage_stock")
  public void setManageStock(@Nullable Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public Product stockQuantity(@Nullable Integer stockQuantity) {
    this.stockQuantity = stockQuantity;
    return this;
  }

  /**
   * Stock quantity.
   * @return stockQuantity
   */
  @Nullable
  public Integer getStockQuantity() {
    return stockQuantity;
  }

  @JsonProperty("stock_quantity")
  public void setStockQuantity(@Nullable Integer stockQuantity) {
    this.stockQuantity = stockQuantity;
  }

  public Product stockStatus(@Nullable String stockStatus) {
    this.stockStatus = stockStatus;
    return this;
  }

  /**
   * Controls the stock status of the product. Options: instock, outofstock, onbackorder. Default is instock.
   * @return stockStatus
   */
  @Nullable
  public String getStockStatus() {
    return stockStatus;
  }

  @JsonProperty("stock_status")
  public void setStockStatus(@Nullable String stockStatus) {
    this.stockStatus = stockStatus;
  }

  public Product backorders(@Nullable String backorders) {
    this.backorders = backorders;
    return this;
  }

  /**
   * If managing stock, this controls if backorders are allowed. Options: no, notify and yes. Default is no.
   * @return backorders
   */
  @Nullable
  public String getBackorders() {
    return backorders;
  }

  public void setBackorders(@Nullable String backorders) {
    this.backorders = backorders;
  }


  public Product backordersAllowed(@Nullable Boolean backordersAllowed) {
    this.backordersAllowed = backordersAllowed;
    return this;
  }

  /**
   * Shows if backorders are allowed. read-only
   * @return backordersAllowed
   */
  @Nullable
  public Boolean getBackordersAllowed() {
    return backordersAllowed;
  }

  @JsonProperty("backorders_allowed")
  public void setBackordersAllowed(@Nullable Boolean backordersAllowed) {
    this.backordersAllowed = backordersAllowed;
  }


  public Product backordered(@Nullable Boolean backordered) {
    this.backordered = backordered;
    return this;
  }

  /**
   * Shows if the product is on backordered. read-only
   * @return backordered
   */
  @Nullable
  public Boolean getBackordered() {
    return backordered;
  }

  public void setBackordered(@Nullable Boolean backordered) {
    this.backordered = backordered;
  }

    public Product lowStockAmount(@Nullable Integer lowStockAmount) {
        this.lowStockAmount = lowStockAmount;
        return this;
    }
    /**
     * Shows if the product low_stock_amount. NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return lowStockAmount
     */
    @Nullable
    public Integer getLowStockAmount() {
        return lowStockAmount;
    }

    public void setLowStockAmount(@Nullable Integer lowStockAmount) {
        this.lowStockAmount = lowStockAmount;
    }


    public Product brands(@Nullable List<Brand> brands) {
        this.brands = brands;
        return this;
    }
    /**
     * Shows the product brands. NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return brands
     */
    @Nullable
    public List<Brand> getBrands() {
        return brands;
    }

    public void setBrands(@Nullable List<Brand> brands) {
        this.brands = brands;
    }

    public Product hasOptions(@Nullable Boolean hasOptions) {
        this.hasOptions = hasOptions;
        return this;
    }
    /**
     * Shows if the product has_options. NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return hasOptions
     */
    @Nullable
    public Boolean getHasOptions() {
        return hasOptions;
    }

    public void setHasOptions(@Nullable Boolean hasOptions) {
        this.hasOptions = hasOptions;
    }

    public Product postPassword(@Nullable String postPassword) {
        this.postPassword = postPassword;
        return this;
    }
    /**
     * Shows post_password. NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return postPassword
     */
    @Nullable
    public String getPostPassword() {
        return postPassword;
    }

    public void setPostPassword(@Nullable String postPassword) {
        this.postPassword = postPassword;
    }


    public Product globalUniqueId(@Nullable String globalUniqueId) {
        this.globalUniqueId = globalUniqueId;
        return this;
    }
    /**
     * Shows global_unique_id. NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return globalUniqueId
     */
    @Nullable
    public String getGlobalUniqueId() {
        return globalUniqueId;
    }

    public void setGlobalUniqueId(@Nullable String globalUniqueId) {
        this.globalUniqueId = globalUniqueId;
    }

    public Product permalinkTemplate(@Nullable String permalinkTemplate) {
        this.permalinkTemplate = permalinkTemplate;
        return this;
    }
    /**
     * Shows permalink_template. NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return permalinkTemplate
     */
    @Nullable
    public String getPermalinkTemplate() {
        return permalinkTemplate;
    }

    public void setPermalinkTemplate(@Nullable String permalinkTemplate) {
        this.permalinkTemplate = permalinkTemplate;
    }


    public Product generatedSlug(@Nullable String generatedSlug) {
        this.generatedSlug = generatedSlug;
        return this;
    }
    /**
     * Shows generated_slug. NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return generatedSlug
     */
    @Nullable
    public String getGeneratedSlug() {
        return generatedSlug;
    }

    public void setGeneratedSlug(@Nullable String generatedSlug) {
        this.generatedSlug = generatedSlug;
    }


    public Product jetpackSharingEnabled(@Nullable Boolean jetpackSharingEnabled) {
        this.jetpackSharingEnabled = jetpackSharingEnabled;
        return this;
    }
    /**
     * Shows jetpack_sharing_enabled. NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return jetpackSharingEnabled.
     */
    @Nullable
    public Boolean getJetpackSharingEnabled() {
        return jetpackSharingEnabled;
    }

    public void setJetpackSharingEnabled(@Nullable Boolean jetpackSharingEnabled) {
        this.jetpackSharingEnabled = jetpackSharingEnabled;
    }

    public Product links(@Nullable Links links) {
        this.links = links;
        return this;
    }
    /**
     * Shows _links NOT Documented on https://woocommerce.github.io/woocommerce-rest-api-docs/#product-properties
     * @return _links
     */
    @Nullable
    public Links getLinks() {
        return links;
    }

    @JsonProperty("_links")
    public void setLinks(@Nullable Links links) {
        this.links = links;
    }


  public Product soldIndividually(@Nullable Boolean soldIndividually) {
    this.soldIndividually = soldIndividually;
    return this;
  }

  /**
   * Allow one item to be bought in a single order. Default is false.
   * @return soldIndividually
   */
  @Nullable
  public Boolean getSoldIndividually() {
    return soldIndividually;
  }

  @JsonProperty("sold_individually")
  public void setSoldIndividually(@Nullable Boolean soldIndividually) {
    this.soldIndividually = soldIndividually;
  }


  public Product weight(@Nullable String weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Product weight.
   * @return weight
   */
  @Nullable
  public String getWeight() {
    return weight;
  }

  public void setWeight(@Nullable String weight) {
    this.weight = weight;
  }


  public Product dimensions(@Nullable ProductDimension dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  /**
   * Get dimensions
   * @return dimensions
   */
  @Nullable
  public ProductDimension getDimensions() {
    return dimensions;
  }

  public void setDimensions(@Nullable ProductDimension dimensions) {
    this.dimensions = dimensions;
  }


  public Product shippingRequired(@Nullable Boolean shippingRequired) {
    this.shippingRequired = shippingRequired;
    return this;
  }

  /**
   * Shows if the product need to be shipped. read-only
   * @return shippingRequired
   */
  @Nullable
  public Boolean getShippingRequired() {
    return shippingRequired;
  }

  @JsonProperty("shipping_required")
  public void setShippingRequired(@Nullable Boolean shippingRequired) {
    this.shippingRequired = shippingRequired;
  }


  public Product shippingTaxable(@Nullable Boolean shippingTaxable) {
    this.shippingTaxable = shippingTaxable;
    return this;
  }

  /**
   * Shows whether or not the product shipping is taxable. read-only
   * @return shippingTaxable
   */
  @Nullable
  public Boolean getShippingTaxable() {
    return shippingTaxable;
  }

  @JsonProperty("shipping_taxable")
  public void setShippingTaxable(@Nullable Boolean shippingTaxable) {
    this.shippingTaxable = shippingTaxable;
  }


  public Product shippingClass(@Nullable String shippingClass) {
    this.shippingClass = shippingClass;
    return this;
  }

  /**
   * Shipping class slug.
   * @return shippingClass
   */
  @Nullable
  public String getShippingClass() {
    return shippingClass;
  }

  @JsonProperty("shipping_class")
  public void setShippingClass(@Nullable String shippingClass) {
    this.shippingClass = shippingClass;
  }


  public Product shippingClassId(@Nullable Integer shippingClassId) {
    this.shippingClassId = shippingClassId;
    return this;
  }

  /**
   * Shipping class ID.
   * @return shippingClassId
   */
  @Nullable
  public Integer getShippingClassId() {
    return shippingClassId;
  }

  @JsonProperty("shipping_class_id")
  public void setShippingClassId(@Nullable Integer shippingClassId) {
    this.shippingClassId = shippingClassId;
  }


  public Product reviewsAllowed(@Nullable Boolean reviewsAllowed) {
    this.reviewsAllowed = reviewsAllowed;
    return this;
  }

  /**
   * Allow reviews. Default is true.
   * @return reviewsAllowed
   */
  @Nullable
  public Boolean getReviewsAllowed() {
    return reviewsAllowed;
  }

  @JsonProperty("reviews_allowed")
  public void setReviewsAllowed(@Nullable Boolean reviewsAllowed) {
    this.reviewsAllowed = reviewsAllowed;
  }


  public Product averageRating(@Nullable String averageRating) {
    this.averageRating = averageRating;
    return this;
  }

  /**
   * Reviews average rating. read-only
   * @return averageRating
   */
  @Nullable
  public String getAverageRating() {
    return averageRating;
  }

  @JsonProperty("average_rating")
  public void setAverageRating(@Nullable String averageRating) {
    this.averageRating = averageRating;
  }


  public Product ratingCount(@Nullable Integer ratingCount) {
    this.ratingCount = ratingCount;
    return this;
  }

  /**
   * Amount of reviews that the product have. read-only
   * @return ratingCount
   */
  @Nullable
  public Integer getRatingCount() {
    return ratingCount;
  }

  @JsonProperty("rating_count")
  public void setRatingCount(@Nullable Integer ratingCount) {
    this.ratingCount = ratingCount;
  }


  public Product relatedIds(@Nullable List<Integer> relatedIds) {
    this.relatedIds = relatedIds;
    return this;
  }

  public Product addRelatedIdsItem(Integer relatedIdsItem) {
    if (this.relatedIds == null) {
      this.relatedIds = new ArrayList<>();
    }
    this.relatedIds.add(relatedIdsItem);
    return this;
  }

  /**
   * List of related products IDs. read-only
   * @return relatedIds
   */
  @Nullable
  public List<Integer> getRelatedIds() {
    return relatedIds;
  }

  @JsonProperty("related_ids")
  public void setRelatedIds(@Nullable List<Integer> relatedIds) {
    this.relatedIds = relatedIds;
  }


  public Product upsellIds(@Nullable List<Integer> upsellIds) {
    this.upsellIds = upsellIds;
    return this;
  }

  public Product addUpsellIdsItem(Integer upsellIdsItem) {
    if (this.upsellIds == null) {
      this.upsellIds = new ArrayList<>();
    }
    this.upsellIds.add(upsellIdsItem);
    return this;
  }

  /**
   * List of up-sell products IDs.
   * @return upsellIds
   */
  @Nullable
  public List<Integer> getUpsellIds() {
    return upsellIds;
  }

  @JsonProperty("upsell_ids")
  public void setUpsellIds(@Nullable List<Integer> upsellIds) {
    this.upsellIds = upsellIds;
  }


  public Product crossSellIds(@Nullable List<Integer> crossSellIds) {
    this.crossSellIds = crossSellIds;
    return this;
  }

  public Product addCrossSellIdsItem(Integer crossSellIdsItem) {
    if (this.crossSellIds == null) {
      this.crossSellIds = new ArrayList<>();
    }
    this.crossSellIds.add(crossSellIdsItem);
    return this;
  }

  /**
   * List of cross-sell products IDs.
   * @return crossSellIds
   */
  @Nullable
  public List<Integer> getCrossSellIds() {
    return crossSellIds;
  }

  @JsonProperty("cross_sell_ids")
  public void setCrossSellIds(@Nullable List<Integer> crossSellIds) {
    this.crossSellIds = crossSellIds;
  }


  public Product parentId(@Nullable Integer parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Product parent ID.
   * @return parentId
   */
  @Nullable
  public Integer getParentId() {
    return parentId;
  }

  @JsonProperty("parent_id")
  public void setParentId(@Nullable Integer parentId) {
    this.parentId = parentId;
  }


  public Product purchaseNote(@Nullable String purchaseNote) {
    this.purchaseNote = purchaseNote;
    return this;
  }

  /**
   * Optional note to send the customer after purchase.
   * @return purchaseNote
   */
  @Nullable
  public String getPurchaseNote() {
    return purchaseNote;
  }

  @JsonProperty("purchase_note")
  public void setPurchaseNote(@Nullable String purchaseNote) {
    this.purchaseNote = purchaseNote;
  }


  public Product categories(@Nullable List<ProductCategoriesItem> categories) {
    this.categories = categories;
    return this;
  }

  public Product addCategoriesItem(ProductCategoriesItem categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * List of categories.
   * @return categories
   */
  @Nullable
  public List<ProductCategoriesItem> getCategories() {
    return categories;
  }

  public void setCategories(@Nullable List<ProductCategoriesItem> categories) {
    this.categories = categories;
  }


  public Product tags(@Nullable List<ProductTag> tags) {
    this.tags = tags;
    return this;
  }

  public Product addTagsItem(ProductTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * List of tags.
   * @return tags
   */
  @Nullable
  public List<ProductTag> getTags() {
    return tags;
  }

  public void setTags(@Nullable List<ProductTag> tags) {
    this.tags = tags;
  }


  public Product images(@Nullable List<ProductImage> images) {
    this.images = images;
    return this;
  }

  public Product addImagesItem(ProductImage imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * List of product images.
   * @return images
   */
  @Nullable
  public List<ProductImage> getImages() {
    return images;
  }

  public void setImages(@Nullable List<ProductImage> images) {
    this.images = images;
  }


  public Product attributes(@Nullable List<ProductAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public Product addAttributesItem(ProductAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * List of attributes.
   * @return attributes
   */
  @Nullable
  public List<ProductAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(@Nullable List<ProductAttribute> attributes) {
    this.attributes = attributes;
  }


  public Product defaultAttributes(@Nullable List<ProductAttribute> defaultAttributes) {
    this.defaultAttributes = defaultAttributes;
    return this;
  }

  public Product addDefaultAttributesItem(ProductAttribute defaultAttributesItem) {
    if (this.defaultAttributes == null) {
      this.defaultAttributes = new ArrayList<>();
    }
    this.defaultAttributes.add(defaultAttributesItem);
    return this;
  }

  /**
   * List of default attributes.
   * @return defaultAttributes
   */
  @Nullable
  public List<ProductAttribute> getDefaultAttributes() {
    return defaultAttributes;
  }

  @JsonProperty("default_attributes")
  public void setDefaultAttributes(@Nullable List<ProductAttribute> defaultAttributes) {
    this.defaultAttributes = defaultAttributes;
  }


  public Product variations(@Nullable List<Integer> variations) {
    this.variations = variations;
    return this;
  }

  public Product addVariationsItem(Integer variationsItem) {
    if (this.variations == null) {
      this.variations = new ArrayList<>();
    }
    this.variations.add(variationsItem);
    return this;
  }

  /**
   * List of variations IDs. read-only
   * @return variations
   */
  @Nullable
  public List<Integer> getVariations() {
    return variations;
  }

  public void setVariations(@Nullable List<Integer> variations) {
    this.variations = variations;
  }


  public Product groupedProducts(@Nullable List<Integer> groupedProducts) {
    this.groupedProducts = groupedProducts;
    return this;
  }

  public Product addGroupedProductsItem(Integer groupedProductsItem) {
    if (this.groupedProducts == null) {
      this.groupedProducts = new ArrayList<>();
    }
    this.groupedProducts.add(groupedProductsItem);
    return this;
  }

  /**
   * List of grouped products ID.
   * @return groupedProducts
   */
  @Nullable
  public List<Integer> getGroupedProducts() {
    return groupedProducts;
  }

  @JsonProperty("grouped_products")
  public void setGroupedProducts(@Nullable List<Integer> groupedProducts) {
    this.groupedProducts = groupedProducts;
  }


  public Product menuOrder(@Nullable Integer menuOrder) {
    this.menuOrder = menuOrder;
    return this;
  }

  /**
   * Menu order, used to custom sort products.
   * @return menuOrder
   */
  @Nullable
  public Integer getMenuOrder() {
    return menuOrder;
  }

  @JsonProperty("menu_order")
  public void setMenuOrder(@Nullable Integer menuOrder) {
    this.menuOrder = menuOrder;
  }


  public Product metaData(@Nullable List<MetaData> metaData) {
    this.metaData = metaData;
    return this;
  }

  public Product addMetaDataItem(MetaData metaDataItem) {
    if (this.metaData == null) {
      this.metaData = new ArrayList<>();
    }
    this.metaData.add(metaDataItem);
    return this;
  }

  /**
   * Meta data properties.
   * @return metaData
   */
  @Nullable
  public List<MetaData> getMetaData() {
    return metaData;
  }

  @JsonProperty("meta_data")
  public void setMetaData(@Nullable List<MetaData> metaData) {
    this.metaData = metaData;
  }

    /**
     * When we batch the customers we retrieve a list of customers that have been created, updated, deleted
     * Within this list we may have record A as success and so no error
     * BUT record B may fail with exists, or something else.
     * Only way to catch the error and pass back is by adding the error message into here.
     */
    @Nullable
    public ErrorMessage getError() {
        return error;
    }

    @JsonProperty("error")
    public void setError(@Nullable ErrorMessage error) {
        this.error = error;
    }

    public boolean hasError() {
        return error != null;
    }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.id, product.id) &&
        Objects.equals(this.name, product.name) &&
        Objects.equals(this.slug, product.slug) &&
        Objects.equals(this.permalink, product.permalink) &&
        Objects.equals(this.dateCreated, product.dateCreated) &&
        Objects.equals(this.dateCreatedGmt, product.dateCreatedGmt) &&
        Objects.equals(this.dateModified, product.dateModified) &&
        Objects.equals(this.dateModifiedGmt, product.dateModifiedGmt) &&
        Objects.equals(this.type, product.type) &&
        Objects.equals(this.status, product.status) &&
        Objects.equals(this.featured, product.featured) &&
        Objects.equals(this.catalogVisibility, product.catalogVisibility) &&
        Objects.equals(this.description, product.description) &&
        Objects.equals(this.shortDescription, product.shortDescription) &&
        Objects.equals(this.sku, product.sku) &&
        Objects.equals(this.price, product.price) &&
        Objects.equals(this.regularPrice, product.regularPrice) &&
        Objects.equals(this.salePrice, product.salePrice) &&
        Objects.equals(this.dateOnSaleFrom, product.dateOnSaleFrom) &&
        Objects.equals(this.dateOnSaleFromGmt, product.dateOnSaleFromGmt) &&
        Objects.equals(this.dateOnSaleTo, product.dateOnSaleTo) &&
        Objects.equals(this.dateOnSaleToGmt, product.dateOnSaleToGmt) &&
        Objects.equals(this.priceHtml, product.priceHtml) &&
        Objects.equals(this.onSale, product.onSale) &&
        Objects.equals(this.purchasable, product.purchasable) &&
        Objects.equals(this.totalSales, product.totalSales) &&
        Objects.equals(this.virtual, product.virtual) &&
        Objects.equals(this.downloadable, product.downloadable) &&
        Objects.equals(this.downloads, product.downloads) &&
        Objects.equals(this.downloadLimit, product.downloadLimit) &&
        Objects.equals(this.downloadExpiry, product.downloadExpiry) &&
        Objects.equals(this.externalUrl, product.externalUrl) &&
        Objects.equals(this.buttonText, product.buttonText) &&
        Objects.equals(this.taxStatus, product.taxStatus) &&
        Objects.equals(this.taxClass, product.taxClass) &&
        Objects.equals(this.manageStock, product.manageStock) &&
        Objects.equals(this.stockQuantity, product.stockQuantity) &&
        Objects.equals(this.stockStatus, product.stockStatus) &&
        Objects.equals(this.backorders, product.backorders) &&
        Objects.equals(this.backordersAllowed, product.backordersAllowed) &&
        Objects.equals(this.backordered, product.backordered) &&

        Objects.equals(this.lowStockAmount, product.lowStockAmount) &&
        Objects.equals(this.brands, product.brands) &&
        Objects.equals(this.globalUniqueId, product.hasOptions) &&
        Objects.equals(this.permalinkTemplate, product.hasOptions) &&
        Objects.equals(this.generatedSlug, product.hasOptions) &&
        Objects.equals(this.jetpackSharingEnabled, product.hasOptions) &&
        Objects.equals(this.links, product.links) &&

        Objects.equals(this.soldIndividually, product.soldIndividually) &&
        Objects.equals(this.weight, product.weight) &&
        Objects.equals(this.dimensions, product.dimensions) &&
        Objects.equals(this.shippingRequired, product.shippingRequired) &&
        Objects.equals(this.shippingTaxable, product.shippingTaxable) &&
        Objects.equals(this.shippingClass, product.shippingClass) &&
        Objects.equals(this.shippingClassId, product.shippingClassId) &&
        Objects.equals(this.reviewsAllowed, product.reviewsAllowed) &&
        Objects.equals(this.averageRating, product.averageRating) &&
        Objects.equals(this.ratingCount, product.ratingCount) &&
        Objects.equals(this.relatedIds, product.relatedIds) &&
        Objects.equals(this.upsellIds, product.upsellIds) &&
        Objects.equals(this.crossSellIds, product.crossSellIds) &&
        Objects.equals(this.parentId, product.parentId) &&
        Objects.equals(this.purchaseNote, product.purchaseNote) &&
        Objects.equals(this.categories, product.categories) &&
        Objects.equals(this.tags, product.tags) &&
        Objects.equals(this.images, product.images) &&
        Objects.equals(this.attributes, product.attributes) &&
        Objects.equals(this.defaultAttributes, product.defaultAttributes) &&
        Objects.equals(this.variations, product.variations) &&
        Objects.equals(this.groupedProducts, product.groupedProducts) &&
        Objects.equals(this.menuOrder, product.menuOrder) &&
        Objects.equals(this.metaData, product.metaData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, slug, permalink, dateCreated, dateCreatedGmt, dateModified, dateModifiedGmt,
        type, status, featured, catalogVisibility, description, shortDescription, sku, price, regularPrice, salePrice,
        dateOnSaleFrom, dateOnSaleFromGmt, dateOnSaleTo, dateOnSaleToGmt, priceHtml, onSale, purchasable, totalSales,
        virtual, downloadable, downloads, downloadLimit, downloadExpiry, externalUrl, buttonText, taxStatus, taxClass,
        manageStock, stockQuantity, stockStatus, backorders, backordersAllowed, backordered,

        lowStockAmount, brands, hasOptions, globalUniqueId, permalinkTemplate, generatedSlug, jetpackSharingEnabled, links,

        soldIndividually, weight, dimensions, shippingRequired, shippingTaxable, shippingClass, shippingClassId, reviewsAllowed,
        averageRating, ratingCount, relatedIds, upsellIds, crossSellIds, parentId, purchaseNote, categories, tags, images,
        attributes, defaultAttributes, variations, groupedProducts, menuOrder, metaData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    permalink: ").append(toIndentedString(permalink)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateCreatedGmt: ").append(toIndentedString(dateCreatedGmt)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("    dateModifiedGmt: ").append(toIndentedString(dateModifiedGmt)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    catalogVisibility: ").append(toIndentedString(catalogVisibility)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    regularPrice: ").append(toIndentedString(regularPrice)).append("\n");
    sb.append("    salePrice: ").append(toIndentedString(salePrice)).append("\n");
    sb.append("    dateOnSaleFrom: ").append(toIndentedString(dateOnSaleFrom)).append("\n");
    sb.append("    dateOnSaleFromGmt: ").append(toIndentedString(dateOnSaleFromGmt)).append("\n");
    sb.append("    dateOnSaleTo: ").append(toIndentedString(dateOnSaleTo)).append("\n");
    sb.append("    dateOnSaleToGmt: ").append(toIndentedString(dateOnSaleToGmt)).append("\n");
    sb.append("    priceHtml: ").append(toIndentedString(priceHtml)).append("\n");
    sb.append("    onSale: ").append(toIndentedString(onSale)).append("\n");
    sb.append("    purchasable: ").append(toIndentedString(purchasable)).append("\n");
    sb.append("    totalSales: ").append(toIndentedString(totalSales)).append("\n");
    sb.append("    virtual: ").append(toIndentedString(virtual)).append("\n");
    sb.append("    downloadable: ").append(toIndentedString(downloadable)).append("\n");
    sb.append("    downloads: ").append(toIndentedString(downloads)).append("\n");
    sb.append("    downloadLimit: ").append(toIndentedString(downloadLimit)).append("\n");
    sb.append("    downloadExpiry: ").append(toIndentedString(downloadExpiry)).append("\n");
    sb.append("    externalUrl: ").append(toIndentedString(externalUrl)).append("\n");
    sb.append("    buttonText: ").append(toIndentedString(buttonText)).append("\n");
    sb.append("    taxStatus: ").append(toIndentedString(taxStatus)).append("\n");
    sb.append("    taxClass: ").append(toIndentedString(taxClass)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    stockQuantity: ").append(toIndentedString(stockQuantity)).append("\n");
    sb.append("    stockStatus: ").append(toIndentedString(stockStatus)).append("\n");
    sb.append("    backorders: ").append(toIndentedString(backorders)).append("\n");
    sb.append("    backordersAllowed: ").append(toIndentedString(backordersAllowed)).append("\n");
    sb.append("    backordered: ").append(toIndentedString(backordered)).append("\n");

    sb.append("    lowStockAmount: ").append(toIndentedString(lowStockAmount)).append("\n");
    sb.append("    brands: ").append(toIndentedString(brands)).append("\n");
    sb.append("    hasOptions: ").append(toIndentedString(hasOptions)).append("\n");
    sb.append("    globalUniqueId: ").append(toIndentedString(globalUniqueId)).append("\n");
    sb.append("    permalinkTemplate: ").append(toIndentedString(permalinkTemplate)).append("\n");
    sb.append("    generatedSlug: ").append(toIndentedString(generatedSlug)).append("\n");
    sb.append("    jetpackSharingEnabled: ").append(toIndentedString(jetpackSharingEnabled)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");

    sb.append("    soldIndividually: ").append(toIndentedString(soldIndividually)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    shippingRequired: ").append(toIndentedString(shippingRequired)).append("\n");
    sb.append("    shippingTaxable: ").append(toIndentedString(shippingTaxable)).append("\n");
    sb.append("    shippingClass: ").append(toIndentedString(shippingClass)).append("\n");
    sb.append("    shippingClassId: ").append(toIndentedString(shippingClassId)).append("\n");
    sb.append("    reviewsAllowed: ").append(toIndentedString(reviewsAllowed)).append("\n");
    sb.append("    averageRating: ").append(toIndentedString(averageRating)).append("\n");
    sb.append("    ratingCount: ").append(toIndentedString(ratingCount)).append("\n");
    sb.append("    relatedIds: ").append(toIndentedString(relatedIds)).append("\n");
    sb.append("    upsellIds: ").append(toIndentedString(upsellIds)).append("\n");
    sb.append("    crossSellIds: ").append(toIndentedString(crossSellIds)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    purchaseNote: ").append(toIndentedString(purchaseNote)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    defaultAttributes: ").append(toIndentedString(defaultAttributes)).append("\n");
    sb.append("    variations: ").append(toIndentedString(variations)).append("\n");
    sb.append("    groupedProducts: ").append(toIndentedString(groupedProducts)).append("\n");
    sb.append("    menuOrder: ").append(toIndentedString(menuOrder)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public String toJson() {
      return new JacksonObjectMapper().toJson(this);
  }

}

